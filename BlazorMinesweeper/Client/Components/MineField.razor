@using Blazor.Minesweeper.Models;

@for (int i = 0; i <= MaxWidth; i++)
{
    for (int j = 0; j <= MaxHeight; j++)
    {
        //Need local variable to avoid problem with variable capturing (Why?)
        var x = i;
        var y = j;

        if (x == 0 && y == 0) //Upper-left corner
        {
            <div class="minesweeper-border-jointleft"></div>
        }
        else if (x == 0 && y == MaxHeight) //Upper-right corner
        {
            <div class="minesweeper-border-jointright"></div>
        }
        else if (x == MaxWidth && y == 0) //Lower-left corner
        {
            <div class="minesweeper-border-bottomleft"></div>
        }
        else if (x == MaxWidth && y == MaxHeight) //Lower-right corner
        {
            <div class="minesweeper-border-bottomright"></div>
        }
        else if (y == 0 || y == MaxHeight) //Leftmost column
        {
            <div class="minesweeper-border-vertical"></div>
        }
        else if (x == 0 || x == MaxWidth) //Rightmost column
        {
            <div class="minesweeper-border-horizontal"></div>
        }
        else if (y > 0 && y < MaxHeight)
        {
            var currentPanel = Panels.First(m => m.Location.X == x && m.Location.Y == y);

            if (currentPanel.IsRevealed)
            {
                if (currentPanel.IsMine) //Mine
                {
                    <div class="minesweeper-gamepiece minesweeper-mine"></div>
                }
                else if (currentPanel.NumberOfAdjacentMines == 0) //Blank
                {
                    <div class="minesweeper-gamepiece minesweeper-0"></div>
                }
                else //Number
                {
                    <div class="minesweeper-gamepiece minesweeper-@currentPanel.NumberOfAdjacentMines">@currentPanel.NumberOfAdjacentMines</div>
                }
            }
            else if (currentPanel.IsFlagged)
            {
                <div class="minesweeper-gamepiece minesweeper-flagged"
     @oncontextmenu="@(() => RightClickPanel(new Coordinate(x,y)))"
     @oncontextmenu:preventDefault>
                </div>
            }
            else //Unrevealed
            {
                <div class="minesweeper-gamepiece minesweeper-unrevealed"
     @onclick="@(() => LeftClickPanel(new Coordinate(x,y)))"
     @oncontextmenu="@(() => RightClickPanel(new Coordinate(x,y)))"
     @oncontextmenu:preventDefault>
                </div>
            }
        }
    }
}
